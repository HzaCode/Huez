name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test]"

    - name: Install optional dependencies
      run: |
        pip install matplotlib seaborn plotly altair plotnine
      continue-on-error: true

    - name: Run unit tests
      run: |
        python -m pytest tests/unit/ -v --tb=short

    - name: Run integration tests
      run: |
        echo "No integration tests configured yet"

    - name: Run tests with coverage
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      run: |
        python -m pytest tests/ --cov=huez --cov-report=xml --cov-report=html

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff mypy

    - name: Lint and format with ruff
      run: |
        # Check and auto-fix with ruff
        ruff check --fix huez tests
        ruff format huez tests

    - name: Type check with mypy
      run: |
        mypy huez --ignore-missing-imports
      continue-on-error: true

  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
        pip install sphinx sphinx-rtd-theme

    - name: Build documentation
      run: |
        # If docs directory exists
        # cd docs && make html
        echo "Documentation build placeholder"
